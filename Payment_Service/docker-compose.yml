version: "3.9"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_ENABLE_AUTH=no
      - ZOO_TICK_TIME=2000
      - ZOO_CLIENT_PORT=2181
    ports:
      - 2181:2181
    networks:
      - appnet

  kafka:
    image: bitnami/kafka:3.7
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
    networks:
      - appnet

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - 8080:8080
    depends_on:
      - kafka
    networks:
      - appnet

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test1234
      POSTGRES_DB: paymentdb
    ports:
      - 5436:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d paymentdb"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - appnet

  redis:
    image: redis:7
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - appnet

  otel-collector:
    image: otel/opentelemetry-collector:0.99.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml:ro
    ports:
      - 4318:4318 # OTLP/HTTP ingest
    depends_on:
      - jaeger
    networks:
      - appnet

  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: jaeger
    ports:
      - 16686:16686 # UI
      - 14268:14268 # HTTP ingest (collector ใช้ forward)
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    networks:
      - appnet

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - promdata:/prometheus
    networks:
      - appnet

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prometheus
    volumes:
      - grafanadata:/var/lib/grafana
    networks:
      - appnet

  payment-api:
    image: badzboss/ecommerce-payment-api:latest
    container_name: payment-api
    command: ["/app/payment-api"]
    # environment:
    #   PG_DSN: postgres://postgres:postgres@postgres:5432/paymentdb?sslmode=disable
    #   REDIS_ADDR: redis:6379
    #   KAFKA_BROKERS: kafka:9092
    #   OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
    ports:
      - 8082:8082
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      otel-collector:
        condition: service_started
    volumes:
      - ./env/.env:/env/.env
    networks:
      - appnet

  outboxrelay:
    image: badzboss/ecommerce-payment-api:latest
    container_name: outboxrelay
    command: ["/app/outboxrelay"]
    environment:
      PG_DSN: postgres://postgres:postgres@postgres:5432/paymentdb?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OUTBOX_BATCH: "200"
      OUTBOX_INTERVAL: "2s"
      OUTBOX_MAX_RETRY: "10"
    ports:
      - 2112:2112
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      otel-collector:
        condition: service_started
    volumes:
      - ./env/.env:/env/.env
    networks:
      - appnet

volumes:
  pgdata:
  redisdata:
  promdata:
  grafanadata:

networks:
  appnet:
